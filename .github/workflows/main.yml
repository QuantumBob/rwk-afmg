name: Release Creation

on: 
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # Create a zip file with all files required by the module to add to the release
    -run: zip -r ./module.zip module.json main.js LICENSE css/ images/ templates/ lang/ 

    # get part of the tag after the `v`
    - name: Extract tag version number
      shell: bash
      id: get-version
      run: echo "::set-output name=version::$(node ./.github/workflows/get-version.js)"

    # # Substitute the Manifest and Download URLs in the module.json
    # - name: Substitute Manifest and Download Links For Versioned Ones
    #   id: sub_manifest_link_version
    #   uses: microsoft/variable-substitution@v1
    #   with:
    #     files: 'module.json'
    #   env:
    #     version: ${{ steps.get-version.outputs.version }}
    #     url: https://github.com/${{github.repository}}
    #     manifest: https://github.com/${{github.repository}}/releases/${{ steps.get-version.outputs.version }}/download/module.json
    #     download: https://github.com/${{github.repository}}/releases/download/${{ steps.get-version.outputs.version }}/module.zip

     # Update the 'latest' release
    - name: Create Release
      id: create-release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        name: Release ${{ steps.get-version.outputs.version }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './module.zip, ./module.json'
        tag: ${{ steps.get-version.outputs.version }}
        
    # # Create a release for this specific version
    # - name: Update Release with Files
    #   id: create_version_release
    #   uses: ncipollo/release-action@v1.10.0
    #   with:
    #     allowUpdates: true # Set this to false if you want to prevent updating existing releases
    #     name: ${{ github.event.release.name }}
    #     draft: false
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     artifacts: './module.json, ./module.zip'
    #     tag: ${{ github.event.release.tag_name }}
    #     body: ${{ github.event.release.body }}